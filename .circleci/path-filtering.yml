version: 2.1

executors:
  base:
    docker:
      - image: cimg/go:1.19.4

parameters:
  service:
    type: enum
    enum: [ users, location-processing ]
    default: users
  all:
    type: boolean
    default: false

commands:
  docker_authenticate:
    steps:
      - setup_remote_docker:
          version: 20.10.14
          docker_layer_caching: true
      - run: docker login -u${DOCKER_USER} ${DOCKER_SERVER} -p${DOCKER_PASSWORD}
  build-binary:
    parameters:
      service:
        type: string
    steps:
      - run: ./build.sh <<parameters.service>>
  build:
    parameters:
      service:
        type: string
    steps:
      - run: ./build.sh <<parameters.service>>
      - run: |
          cd <<parameters.service>>
          docker build . -t ${DOCKER_SERVER}/${DOCKER_REPOSITORY}/<<parameters.service>>:${CIRCLE_SHA1}
      - run:
          name: Archive Docker image
          command: docker save --output image-<<parameters.service>>.tar "${DOCKER_SERVER}/${DOCKER_REPOSITORY}/<<parameters.service>>:${CIRCLE_SHA1}"
      - persist_to_workspace:
          root: .
          paths:
            - ./image-<<parameters.service>>.tar
  publish:
    parameters:
      service:
        type: string
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Load Docker image
          command: docker load --input /tmp/workspace/image-<<parameters.service>>.tar
      - run:
          name: Publish Docker image
          command: docker push ${DOCKER_SERVER}/${DOCKER_REPOSITORY}/<<parameters.service>>:${CIRCLE_SHA1}

# Define the jobs we want to run for this project
jobs:
  build-binary:
    executor: base
    parameters:
      service:
        type: string
    steps:
      - checkout
      - build-binary:
          service: <<parameters.service>>
  build:
    executor: base
    environment:
      SERVICE: users
    parameters:
      service:
        type: string
    steps:
      - docker_authenticate
      - checkout
      - build:
          service: <<parameters.service>>
  publish:
    executor: base
    environment:
      SERVICE: users
    parameters:
      service:
        type: string
    steps:
      - docker_authenticate
      - publish:
          service: <<parameters.service>>
    
workflows:
  all:
    when: 
      or: 
        - << pipeline.parameters.all >> 
    jobs:
      - build-binary:
          service: proto

  users:
    when: 
      or: 
        - equal: [ users, << pipeline.parameters.service >> ]
        - << pipeline.parameters.all >> 
    jobs:
      - build:
          service: users
      - publish:
          service: users
          requires:
            - build
      
  location-processing:
    when: 
      or: 
        - equal: [ location-processing, << pipeline.parameters.service >> ]
        - << pipeline.parameters.all >> 
    jobs:
      - build:
          service: location-processing
      - publish:
          service: location-processing
          requires:
            - build